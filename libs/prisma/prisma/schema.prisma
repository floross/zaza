//******** AUTO GENERATED FILE, DO NOT EDIT.  *********

// ------------------------------------------------

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  output          = "../../../node_modules/.prisma/client"
  previewFeatures = ["filterJson"]
}

// -------------------------------------- //
// Generated schema (generated by hapify) //
// -------------------------------------- //
model BlogPost {

  /// @Validator.MaxLength(255)
  /// @Validator.IsUUID()
  id String @id @default(uuid()) @db.VarChar(255)

  /// @Validator.IsDate()
  createdAt DateTime

  /// @Validator.MaxLength(255)
  title String @db.VarChar(255)


  content String @db.Text

  /// @Validator.IsEnum(BlogPostStatus)
  status BlogPostStatus

  // Relation One to Many between BlogPost and User

  author User @relation("BlogPost.author.User.blogPosts", fields: [authorId], references: [id])


  authorId String @db.VarChar(255)

  // Relation Many to Many between Tags and BlogPost
  /// @Validator.IsArray({ each: true })
  tags Tag[] @relation("BlogPost.tags.Tag.questions")

}

model Profil {

  /// @Validator.MaxLength(255)
  /// @Validator.IsUUID()
  id String @id @default(uuid()) @db.VarChar(255)

  /// @Validator.IsDate()
  createdAt DateTime

  // Relation One To One between Profil and User

  user User @relation("Profil.user.User.profil", fields: [userId], references: [id])


  userId String @db.VarChar(255) @unique

  /// @Validator.MaxLength(255)
  phone String @db.VarChar(255)

  /// @Validator.MaxLength(255)
  address String @db.VarChar(255)

}

model Tag {

  /// @Validator.MaxLength(255)
  /// @Validator.IsUUID()
  id String @id @default(uuid()) @db.VarChar(255)

  /// @Validator.IsDate()
  createdAt DateTime

  /// @Validator.MaxLength(255)
  label String @db.VarChar(255)

  // Model referenced in BlogPost, use the backRelation field from hapify
  questions BlogPost[] @relation("BlogPost.tags.Tag.questions")

}

model User {

  /// @Validator.MaxLength(255)
  /// @Validator.IsUUID()
  id String @id @default(uuid()) @db.VarChar(255)

  /// @Validator.IsDate()
  createdAt DateTime

  /// @Validator.MaxLength(255)
  name String @db.VarChar(255)

  /// @Validator.MaxLength(255)
  email String @unique @db.VarChar(255)

  /// @HideField()
  /// @Validator.MaxLength(255)
  password String? @db.VarChar(255)

  /// @Validator.IsArray({ each: true })
  /// @Validator.IsEnum(UserRoles)
  roles UserRoles[]

  // Model referenced in BlogPost, use the backRelation field from hapify
  blogPosts BlogPost[] @relation("BlogPost.author.User.blogPosts")

  // Model referenced in Profil, use the backRelation field from hapify
  profil Profil? @relation("Profil.user.User.profil")

}

enum BlogPostStatus {
  published
  draft
}

enum UserRoles {
  admin
  user
  guest
}
